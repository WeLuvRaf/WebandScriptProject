<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List</title>
</head>



<body>
    <h1>My To-Do List</h1>

    <!-- Form to add a new task -->
    <form id="addTaskForm">
        <input type="text" id="newTask" placeholder="Add a new task" required>
        <button type="submit">Add Task</button>
    </form>

    <!-- List of tasks -->
    <ul id="taskList">
        <!-- Tasks will be dynamically added here -->
    </ul>

    <script>
        // Array to store tasks (this is kept client-side now)
        let tasks = [];

        // Handle adding a new task
        const addTaskForm = document.getElementById('addTaskForm');
        const newTaskInput = document.getElementById('newTask');
        const taskList = document.getElementById('taskList');

        addTaskForm.addEventListener('submit', function(event) {
            event.preventDefault();
            const task = newTaskInput.value.trim();
            if (task !== "") {
                // Add the task to the tasks array
                tasks.push(task);

                // Clear the input field
                newTaskInput.value = '';

                // Update the task list in the DOM
                renderTasks();
                
                // Send the task to the server (optional, to keep the tasks persistent on the server)
                fetch('/add', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                    body: `newTask=${encodeURIComponent(task)}`
                })
                .then(response => response.json())
                .then(data => {
                    tasks = data.tasks; // Update the tasks from server
                    renderTasks();
                })
                .catch(error => console.error('Error:', error));
            }
        });

        // Function to render the tasks in the DOM
        function renderTasks() {
            taskList.innerHTML = ''; // Clear the list
            tasks.forEach(function(task) {
                const li = document.createElement('li');
                li.textContent = task;

                const deleteBtn = document.createElement('button');
                deleteBtn.textContent = 'Delete';
                deleteBtn.className = 'deleteBtn';
                deleteBtn.onclick = function() {
                    deleteTask(task);
                };

                li.appendChild(deleteBtn);
                taskList.appendChild(li);
            });
        }

        // Handle deleting a task
        function deleteTask(task) {
            tasks = tasks.filter(function(t) {
                return t !== task;
            });

            // Update the task list in the DOM
            renderTasks();

            // Send the task to the server to delete it
            fetch('/delete', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: `taskToDelete=${encodeURIComponent(task)}`
            })
            .then(response => response.json())
            .then(data => {
                tasks = data.tasks; // Update the tasks from server
                renderTasks();
            })
            .catch(error => console.error('Error:', error));
        }
    </script>
</body>
</html>
